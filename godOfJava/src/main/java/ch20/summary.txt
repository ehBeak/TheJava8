java.lang package
[1] 예외 및 에러 관련
    * OutOfMemoryError(OOME): 메모리 부족시 발생
    * StackOverflowError: 호출된 메소드의 깊이가 너무 깊을 때

[2] 어노테이션
    * @Deprecated
    * @Override
    * @SuppressWaring

[3] 숫자 처리 클래스
    * 기본 자료형의 숫자를 객체로 처리
        - Byte, Short, Integer, Long, Float, Double
            1) Number라는 abstact클래스 확장
            2) Auto: 참조 자료형이지만 기본 자료형처럼 사용할 수 있음
        - Boolean
        - Character
    * 기본 자료형: Heap이 아닌 stack에서 관리
    * Character 클래스를 제외하고 pars타입이름()와 valueOf() 사용가능
        - parse타입명() : static메소드, 해당 값을 기본 자료형으로 바꿔준다
        - valueOf(): static메소드, 해당 값을 참조 자료형으로 바꿔준다.
    * 참조 자료형에서 +연산이 가능한 것은 String 클래스뿐

[4] System 클래스: 시스템 정보를 확인하는 클래스
    * System클래스는 생성자가 존재하지 않는다.
    * static PrintStream err
    * static PrintStream out
    * static InputStream in

    * Property: 시스템 속성값 관리(읽기, 쓰기 가능)
        - Properties 클래스(java.util): 프로그램 실행시 자동으로 생성, Hashtable의 상속
        - System.getProperty(); => static Properties getProperty()
    * 시스템 환경 값 조회(읽기만 가능)
        - static Map<String, String> getenv()
        - static String getenv(String name)
    * GC 수행
    * JVM 종료
    * 현재시간 조회

[5] System.out
    * System의 static PrintStream out 변수
        - PrintStream 클래스의 주요 메소드: print(), println(), format(), printf(), write()
        - println(null): println(String.valueOf(null)) -> toString보다 valueOf를 사용하는 것이 좋음
        - println(null + "string"): println(new StringBuilder().append(null).append("string"))
