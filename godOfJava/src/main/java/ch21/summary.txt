제네릭: 명시적으로 타입을 지정할 때 사용하는 것
[1] 용도
    * 형 변환에서 발생할 수 있는 문제점을 사전에 없애기 위해

[2] 형식
    * 클래스명<T>

[3] 제네릭 클래스가 매개변수
    * <?> 사용(wildcard 타입): 어떤 타입의 클래스가 만들어질지 모르기 때문에(<Object>로 처리)
        - wildcard는 메소드의 매개변수로만 사용하자
        - instanceOf로 타입 확인
        - 객체를 wildcard로 선언하면, 어떤 객체를 가져올 수는 있지만, 선언시는 특정 타입으로 값 지정 불가
    * < ? extends 타입 > : 타입을 상속받은 모든 클래스가 사용가능
    * 값을 할당할 수 없으니, 조회용 매개변수로 사용하자!

[4] 메소드를 제네릭하게 선언
    * public <T> void method(GenericClass<T> c, T value)
        -> 리턴타입 앞에 제네릭한 타입을 선언하고 그 타입을 매개변수에서 사용
    * public < S,T extends Car> void method(GenericClas<T> c, T value, S value2)